name: Svelto.Common UPM Release 

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Reason'
        default: 'Manual workflow triggering'
  push:
    branches:
      - master
    paths:
      - version.json

jobs:
  build:
    env:
      PKG_NAME: Svelto.Common
      VERSION_JSON: version.json
      PKG_JSON: package.json
      LICENSE: LICENSE
      README: README.md

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: copy package to temp
      run: |
        mkdir temp
        cp $VERSION_JSON temp
        cp $PKG_JSON temp
        cp $LICENSE temp
        cp $README temp
        rsync -r --exclude '.git' --exclude '.github' --exclude $VERSION_JSON . "temp/${PKG_NAME}"

    - name: checkout upm branch
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git checkout UPM

    - name: get preparation tools
      run: git clone https://github.com/Ujinjinjin/upm-preparator.git --branch v1.0.12 --single-branch

    - name: bump package version
      run: python3 upm-preparator/version_bumpinator.py --version-file "temp/version.json" --package-file "temp/package.json" --env-file "${GITHUB_ENV}"

    - name: move files from temp to root
      run: python3 upm-preparator/structure_changinator.py --package-root "temp/${PKG_NAME}"

    - name: move package.json & LICENSE & README from temp to root
      run: |
        mv "temp/package.json" .
        mv "temp/LICENSE" .
        mv "temp/README.md" .

    - name: generate meta files
      run: python3 upm-preparator/meta_makinator.py --package-file "package.json"

    - name: remove preparation tools and temp
      run: |
        rm -rf upm-preparator
        rm -rf temp

    - name: config git data
      run: |
        git config --global user.email "noreply@github.com"
        git config --global user.name "GitHub"

    - name: commit, tag and push changes
      run: |
        git add -A
        git commit -m "UPM package version ${PKG_VERSION}"
        git push origin UPM
        git tag $(echo $PKG_VERSION)
        git push origin $(echo $PKG_VERSION)

    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.PKG_VERSION }}
        release_name: "UPM ${{ env.PKG_VERSION }}"
        body: "-"
        draft: false
        prerelease: false
